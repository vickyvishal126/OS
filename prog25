#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>
#include <dirent.h>

int main() {
    int file_descriptor = open("example_file.txt", O_RDONLY);

    if (file_descriptor == -1) {
        perror("Error opening the file");
        exit(EXIT_FAILURE);
    }

    char buffer[100];
    ssize_t bytes_read = read(file_descriptor, buffer, sizeof(buffer));

    if (bytes_read == -1) {
        perror("Error reading from the file");
        close(file_descriptor);
        exit(EXIT_FAILURE);
    }
    buffer[bytes_read] = '\0';

    printf("Data read from the file: %s\n", buffer);

    lseek(file_descriptor, 0, SEEK_SET);

    struct stat file_info;
    if (fstat(file_descriptor, &file_info) == -1) {
        perror("Error getting file information");
        close(file_descriptor);
        exit(EXIT_FAILURE);
    }

    printf("\nFile Information:\n");
    printf("Size: %ld bytes\n", file_info.st_size);
    printf("Mode: %o\n", file_info.st_mode);
    printf("Last Access Time: %s", ctime(&file_info.st_atime));

    close(file_descriptor);

    DIR *directory = opendir(".");

    if (directory == NULL) {
        perror("Error opening the directory");
        exit(EXIT_FAILURE);
    }

    struct dirent *dir_entry;

    printf("\nDirectory Contents:\n");
    while ((dir_entry = readdir(directory)) != NULL) {
        printf("%s\n", dir_entry->d_name);
    }

    closedir(directory);

    return 0;
}
